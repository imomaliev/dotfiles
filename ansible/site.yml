---
- name: Setup droplet
  hosts: projecti
  remote_user: root
  tasks:
  - name: upgrade
    apt: update_cache=yes upgrade=full
  - name: install neovim, tmux, mc
    apt:
      name:
        - neovim
        - tmux
        - mc
      update_cache: yes
      install_recommends: no

  - name: purge snap
    apt:
      name: snapd
      state: absent
      purge: yes
      autoremove: yes
  # https://github.com/do-community/ansible-playbooks/blob/master/docker_ubuntu1804/playbook.yml

  - name: install docker
    block:
      - name: Install required system packages
        apt: update_cache=yes name={{ item }}
        loop: [ "apt-transport-https", "ca-certificates", "curl", "gnupg-agent", "software-properties-common" ]
      - name: Add Docker GPG apt Key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          id: 0EBFCD88
          state: present
      - name: Add Docker Repository
        apt_repository:
          repo: deb https://download.docker.com/linux/ubuntu focal stable
          state: present
      - name: Update apt and install docker-ce
        apt: update_cache=yes name={{ item }}
        loop: [ "docker-ce", "docker-ce-cli", "containerd.io"]

  - name: Install docker-compose
    get_url:
      url: https://github.com/docker/compose/releases/download/1.25.5/docker-compose-Linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: "0755"

  - name: Add user with proper privileges
    block:
      # https://stackoverflow.com/a/33362805
      - name: Make sure we have a wheel group
        group:
          name: wheel
          state: present
      # https://stackoverflow.com/a/55876857
      - name: sudo without password for wheel group
        copy:
          content: "%wheel ALL=(ALL:ALL) NOPASSWD:ALL"
          dest: /etc/sudoers.d/wheel
          mode: 0440
          validate: visudo -cf %s
      - name: Add user
        user:
          name: me
          append: yes
          shell: /usr/bin/bash
          groups: wheel,docker
      - name: authorize ssh key
        authorized_key:
          user: me
          state: present
          key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"


- name: Setup dotfiles
  hosts: projecti
  remote_user: me
  tasks:
  - name: ensure private key is present
    copy:
      src: "~/.ssh/projecti_rsa"
      dest: "/home/me/.ssh/id_rsa"
      mode: 0600
  - name: ensure public key is present
    copy:
      src: "~/.ssh/projecti_rsa.pub"
      dest: "/home/me/.ssh/id_rsa.pub"
      mode: 0600
  - name: enable ssh-agent
    shell: 'eval "$(ssh-agent -s)" && ssh-add ~/.ssh/id_rsa'
  - name: Create a development directory if it does not exist
    file:
      path: ~/development
      state: directory
  - name: clone dotfiles repo
    git:
      repo: git@github.com:imomaliev/dotfiles.git
      dest: ~/development/dotfiles
      accept_hostkey: yes
  - name: Link nvim config
    block:
    - name: Create a nvim directory if it does not exist
      file:
        path: ~/.config/nvim
        state: directory
    - name: Create symlink for nvim
      file:
        src: ~/development/dotfiles/minimal/init.vim
        dest: ~/.config/nvim/init.vim
        state: link
  - name: Link tmux config
    file:
      src: ~/development/dotfiles/minimal/tmux.conf
      dest: ~/.tmux.conf
      state: link
  - name: Link bash config
    block:
    - name: Create a bash directory if it does not exist
      file:
        path: ~/.config/bash
        state: directory
    - name: Create symlink for bashrc
      file:
        src: ~/development/dotfiles/minimal/bashrc
        dest: ~/.config/bash/bashrc
        state: link
    - name: Add sourcing line
      lineinfile:
        path: ~/.profile
        state: present
        insertafter: EOF
        line: '[[ -f "$HOME/.config/bash/bashrc" ]] && . $HOME/.config/bash/bashrc'
